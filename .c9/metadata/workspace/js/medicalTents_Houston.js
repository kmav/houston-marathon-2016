{"filter":false,"title":"medicalTents_Houston.js","tooltip":"/js/medicalTents_Houston.js","ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":4,"column":9},"end":{"row":4,"column":9},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"hash":"d1d8448fcc9c19160c51cc2e64ea4e084eb8174c","changed":true,"value":"function filterMedicalTents(obj){\n\treturn ((obj.Type==\"MT\")&&obj.Location!=\"DUMMY\");\n};\n\nfunction colorBars(current,beds){\n\t\n\tvar percent = 100*(+current)/(+beds);\n    if (percent >= 100) {\n        percent = 99\n    }\n    var r, g, b;\n\n    if (percent < 50) {\n        // green to yellow\n        r = 11;\n        g = 181;\n        b = 1;\n\n    } else if (percent < 90) {\n        // yellow to red\n        r = 255;\n        g = 220;\n        b = 0;\n    }\n    \n    else {\n    \tr = 255;\n    \tg = 0;\n    \tb = 0;\n    }\n\n    return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n}\n\n\nfunction drawMedicalTents(data){\n\n\tconsole.table(data);\n\t//we only need the ones with attribute Aid Station\n\tvar MedicalTents = []\n\n\t//filter aid station if it's an Aid Station\n\tvar MedicalTentsDataset = data.filter(filterMedicalTents);\n\t\n//\tconsole.table(MedicalTentsDataset);\n\t//debugger;\n\t//now we will plot this data with following:\n\t\t//show rectangles with:\n\t\t\t//current, capacity overlayed (on top of each other)\n\t\t\t//and use Comments or other stuff to figure out how full it is\n\t\n\tvar w = document.getElementById('medicalTent').offsetWidth *0.8 ;\n\tvar h = document.getElementById('medicalTent').offsetHeight*0.8;\n\t//padding\n\tvar p = 10;\n\n\n\t//get the x scale \n\tvar yScale = d3.scale.ordinal()\n\t\t\t\t\t.domain(d3.range(MedicalTentsDataset.length))\n\t\t\t\t\t.rangeRoundBands([h-p,2*p],0.15);\n\t\n\tconsole.log(yScale(2));\n\tconsole.log(yScale(1));\n\n\t//set the y scale  (for actual numbers)\n\tvar xScale = d3.scale.linear()\n\t\t\t\t\t.domain([0,1.2*d3.max(MedicalTentsDataset,function(d){\n\t\t\t\t\t\treturn +d.Beds;\n\t\t\t\t\t})])\n\t\t\t\t\t.range([p,w-p]);\n\n\t//set the y scale for %\n\t\n\n\t//build x and y axis\n\tvar xAxis = d3.svg.axis()\n\t\t\t\t\t.scale(xScale)\n\t\t\t\t\t.orient(\"bottom\")\n\t\t\t\t\t.ticks(10);\n\n\tvar yAxis = d3.svg.axis()\n\t\t\t\t\t.scale(yScale)\n\t\t\t\t\t.orient(\"left\");\n\n\t//make a function that returns it to use later in the gridlines\n\tfunction make_xAxis(){\n\t\treturn xAxis;\n\t}\n\n\tfunction make_yAxis(){\n\t\treturn yAxis;\n\t}\n\n\tvar ySpacing = (yScale(1)-yScale(0))/2;\n\n\n\t//now create the svg to hold things in \n\tvar svg = d3.select(\"#medicalTent\")\n\t\t\t\t.append(\"svg\")\n\t\t\t\t.attr(\"id\",\"MT_graph\")\n\t\t\t\t.attr(\"width\",w+p)\n\t\t\t\t.attr(\"height\",h+3*p);\n\n\t\t//plot the medical tent name on x axis\n\t\n\tsvg.selectAll(\"text\")\n\t\t.data(MedicalTentsDataset,function(d){\n\t\t\t\t\treturn d.Location;\n\t\t\t\t})\n\t\t.order()\n\t\t.enter()\n\t\t.append(\"text\")\n\t\t.text(function(d){\n\t\t\treturn d.Location.substr(0,3);\n\t\t})\n\t\t.attr(\"y\",function(d,i){\n\t\t\treturn yScale(i)-ySpacing;\n\t\t})\n\t\t.attr(\"x\",function(d){\n\t\t\treturn d3.max([xScale(+d.Beds)+1.5*p,xScale(+d.CurrentPatients)+1.5*p]);;\n\t\t})\n\t\t.attr(\"class\",\"MTText\")\n\t\t.attr(\"text-anchor\",\"right\")\n\t\t.style(\"font-weight\",400)\n\t\t.style(\"font-size\", function(d){\n\t\t\treturn (yScale.rangeBand()*0.5)+'px';\n\t\t});\n\t\t\n\t\t\n\t//add y axis\n\tsvg.append(\"g\")\n\t\t.attr(\"class\",\"x axis\")\n\t\t.attr(\"transform\",\"translate(0,\"+(h-p)+\")\") //moves it to the right coordinate\n\t.call(xAxis);\n\t\n\t//add y grid lines:\n\t/*svg.append(\"g\")\n\t\t.attr(\"class\",\"grid\")\n\t\t.attr(\"transform\",\"translate(\"+p+\",0)\")\n\t\t.call(make_yAxis()\n\t\t\t.tickSize(-w+2*p,0,0)\n\t\t\t.tickFormat(\"\")\n\t\t);*/\n\t\n\t\t\n\t\t\tvar barsTotal = svg.selectAll(\".totalbeds\")\n\t\t\t\t.data(MedicalTentsDataset,function(d){\n\t\t\t\t\treturn d.Location;\n\t\t\t\t})\n\t\t\t\t.order()\n\t\t\t\t.enter()\n\t\t\t\t.append(\"rect\")\n\t\t\t\t.attr(\"class\", \"totalbeds\")\n\t\t\t\t.attr(\"x\",function(d,i){\n\t\t\t\t\treturn p;\n\t\t\t\t})\n\t\t\t\t.attr(\"y\",function(d,i){\n\t\t\t\t\t//console.log(h));\n\t\t\t\t\treturn (yScale(i));\n\t\t\t\t\t//return h-p-yScale(+d.CurrentPatients);\n\t\t\t\t})\n\t\t\t\t.attr(\"width\",function(d){\n\t\t\t\t\t//console.log(h-yScale())\n\t\t\t\t\t//return yScale(+d.CurrentPatients);\n\t\t\t\t\treturn (xScale(+d.Beds)-p);\n\t\t\t\t})\n\t\t\t\t.attr(\"height\",yScale.rangeBand());\n\t\t\t\t\n\t\t\t\t\n\tvar bars = svg.selectAll(\".bedstaken\")\n\t\t\t\t.data(MedicalTentsDataset,function(d){\n\t\t\t\t\treturn d.Location;\n\t\t\t\t})\n\t\t\t\t.order()\n\t\t\t\t.enter()\n\t\t\t\t.append(\"rect\")\n\t\t\t\t.attr(\"class\", \"bedstaken\")\n\t\t\t\t.attr(\"x\",function(d,i){\n\t\t\t\t\treturn p;\n\t\t\t\t})\n\t\t\t\t.attr(\"y\",function(d,i){\n\t\t\t\t\t//console.log(h));\n\t\t\t\t\treturn (yScale(i));\n\t\t\t\t\t//return h-p-yScale(+d.CurrentPatients);\n\t\t\t\t})\n\t\t\t\t.attr(\"width\",function(d){\n\t\t\t\t\t//console.log(h-yScale())\n\t\t\t\t\t//return yScale(+d.CurrentPatients);\n\t\t\t\t\treturn (xScale(+d.CurrentPatients)-p);\n\t\t\t\t})\n\t\t\t\t.attr(\"height\",yScale.rangeBand())\n\t\t\t\t.on(\"mouseover\",function(d){\n\t\t\t\t\tvar xOffset = document.getElementById(\"map\").offsetWidth;\n\t\t\t\t\tvar yOffset = $(\"#sidebarTopRow\").height();\n\n\t\t\t\t\tvar xPosition = xOffset+parseFloat(d3.select(this).attr(\"x\"));\n\t\t\t\t\tvar yPosition = parseFloat(d3.select(this).attr(\"y\")) + yOffset ;//+ h/2;\n\t\t\t\t\td3.select(\"#tooltip\")\n\t\t\t\t\t.style(\"left\",xPosition+\"px\")\n\t\t\t\t\t.style(\"top\",yPosition+\"px\")\n\t\t\t\t\t.select(\"#value\")\n\t\t\t\t\t.text(function(){\n\t\t\t\t\treturn \"Now \"+d.CurrentPatients+\" : \"+parseFloat(100*(+d.CurrentPatients / (+d.Beds))).toFixed(0)+\"% Total \"+d.CumulativePatients+\" \";\n\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\td3.select(\"#tooltip\")\n\t\t\t\t\t.select(\"#tooltipHeader\")\n\t\t\t\t\t.style(\"font-weight\",\"bold\")\n\t\t\t\t\t.text(function(){\n\t\t\t\t\treturn \"Medical Tent \"+d.Location;\n\t\t\t\t\t})\n\t\t\t\t\t//show the tooltip\n\t\t\t\t\td3.select(\"#tooltip\")\n\t\t\t\t\t.classed(\"hidden\",false);\n\t\t\t\t\tvar Popup = 3;\n\t\t\t\td3.select(this)\n\t\t\t\t\t\t.transition()\n\t\t\t\t\t\t.duration(100)\n\t\t\t\t\t\t.attr(\"x\", function(d) {\n\t\t\t\t\t\t\treturn (xScale(0));\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.attr(\"width\", function(d) {\n\t\t\t\t\t\t\treturn (xScale(+d.CurrentPatients) + Popup);\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t.on(\"mouseout\",function(){\n\t\t\t\t\t\td3.select(\"#tooltip\")\n\t\t\t\t\t\t.classed(\"hidden\",true);\n\t\t\t\t\t\t//make them go down again\n\t\t\t\t\t\tvar Popup = 3;\n\t\t\t\t\td3.select(this)\n\t\t\t\t\t\t\t.transition()\n\t\t\t\t\t\t\t.duration(100)\n\t\t\t\t\t\t\t.attr(\"x\", function(d) {\n\t\t\t\t\t\t\t\treturn (xScale(0));\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.attr(\"width\", function(d) {\n\t\t\t\t\t\t\t\treturn (xScale(+d.CurrentPatients) - xScale(0) - Popup);\n\t\t\t\t\t\t\t});\t\n\t\t\t\t})\n\t\t\n\t\tsvg.selectAll(\".totalbeds\")\n\t\t.attr(\"fill\",\"rgba(0,0,0,0.2)\")\n\t\t.attr(\"opacity\",0.7);\n\t\t\n\t\t\n\t\n\t\t\n\t//figure out what the spacing is between each item\n\t//add the text that says what aid station number\n\t// console.log(\"putting new data\");\n\n\t\n\t\n\t//make all the same color (to change later)\n\t\n\t\n\t\t\n\tsvg.selectAll(\".bedstaken\")\n\t\t.attr(\"fill\",function(d){\n\t\t\tconsole.log(d.Status);\n\t\t\t\n\t\t\t//figure out colors based on total beds and current beds\n\t\t\treturn colorBars(+d.CurrentPatients,+d.Beds);\n\t\t});\n\t\n\t//Medical tents title\n\tsvg.append(\"text\")\n\t\t.attr(\"id\",\"AidStationTitle\")\n\t\t.attr(\"x\",w/2)\n\t\t.attr(\"y\",p*1.5)\n\t\t.text(\"Medical Tents (Bed Occupancy)\")\n\t\t.attr(\"text-anchor\", \"middle\");\n\n\t\t\t\t\t\n\t//add x axis\n\t/*\n\n\t*/\n\n\n\t//add x grid lines:\n\t/*\n\tsvg.append(\"g\")\n\t\t.attr(\"class\",\"grid\")\n\t\t.attr(\"transform\",\"translate(0,\"+(h-p/2)+\")\")\n\t\t.call(make_xAxis()\n\t\t\t.tickSize(-h,0,0)\n\t\t\t.tickFormat(\"\")\n\t\t);\n\t*/\n\t\n\t/*var legend = svg.append('g')\n\t\t\t\t.attr(\"class\", \"legend\")\n\t\t\t\t.attr(\"height\", 50)\n\t\t\t\t.attr(\"width\", 50)\n\t\t\t\t.attr(\"transform\", \"translate(50,30)\")\n\t\t\t\t.call(d3.legend) */\n\t/*\n\tsvg.append(\"g\")\n\t\t.attr(\"class\",\"grid\")\n\t\t.attr(\"transform\",\"translate(0,\"+(h-p/2)+\")\")\n\t\t.call(make_xAxis()\n\t\t\t.tickSize(-h,0,0)\n\t\t\t.tickFormat(\"\")\n\t\t);\n\t\n\t*/\n\n};\n\n//call the function to draw the aid station chart\nd3.csv('data/AidStations.csv',drawMedicalTents);\n\n\n\n\n\n\n","undoManager":{"mark":-1,"position":-1,"stack":[]},"timestamp":1463771631000}